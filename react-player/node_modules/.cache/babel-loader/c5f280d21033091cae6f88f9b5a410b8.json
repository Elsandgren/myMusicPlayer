{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Desktop\\\\work\\\\Developed\\\\myMusicPlayer\\\\react-player\\\\src\\\\components\\\\LibrarySong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = _ref => {\n  let {\n    song,\n    songs,\n    setCurrentSong,\n    id,\n    audioRef\n  } = _ref;\n\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter(state => state.id === id);\n    setCurrentSong(selectedSong[0]);\n    audioRef.current.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: \"Library-song\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: song.name,\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["C:/Users/Elias/Desktop/work/Developed/myMusicPlayer/react-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","song","songs","setCurrentSong","id","audioRef","songSelectHandler","selectedSong","filter","state","current","play","name","cover","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,QAAkD;AAAA,MAAjD;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,cAAd;AAA8BC,IAAAA,EAA9B;AAAkCC,IAAAA;AAAlC,GAAiD;;AAClE,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,YAAY,GAAGL,KAAK,CAACM,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaA,EAArC,CAArB;AACAD,IAAAA,cAAc,CAACI,YAAY,CAAC,CAAD,CAAb,CAAd;AACAF,IAAAA,QAAQ,CAACK,OAAT,CAAiBC,IAAjB;AACH,GAJD;;AAKA,sBACI;AAAK,IAAA,OAAO,EAAEL,iBAAd;AAAiC,IAAA,SAAS,EAAC,cAA3C;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEL,IAAI,CAACW,IAAf;AAAqB,MAAA,GAAG,EAAGX,IAAI,CAACY;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACA;AAAA,kBAAKZ,IAAI,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAKX,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAfD;;KAAMd,W;AAiBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, id, audioRef }) => {\r\n    const songSelectHandler = () => {\r\n        const selectedSong = songs.filter((state) => state.id === id);\r\n        setCurrentSong(selectedSong[0]);\r\n        audioRef.current.play();\r\n    }\r\n    return(\r\n        <div onClick={songSelectHandler} className=\"Library-song\">\r\n            <img alt={song.name} src= {song.cover}></img>\r\n            <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;"]},"metadata":{},"sourceType":"module"}