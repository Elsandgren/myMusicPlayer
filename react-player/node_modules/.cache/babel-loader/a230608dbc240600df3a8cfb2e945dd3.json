{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elias\\\\Desktop\\\\work\\\\Developed\\\\myMusicPlayer\\\\react-player\\\\src\\\\components\\\\Player.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\n/* import { useState } from \"react/cjs/react.development\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  let {\n    currentSong,\n    isPlaying,\n    setIsPlaying,\n    audioRef,\n    setSonginfo,\n    songInfo,\n    songs,\n    setCurrentSong\n  } = _ref;\n\n  //reference\n  //eventhandlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSonginfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs([currentIndex + 1] % songs.length));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: 0,\n        max: songInfo.duration || 0,\n        value: songInfo.currentTime,\n        onChange: dragHandler,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-back\"),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-forward\"),\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Elias/Desktop/work/Developed/myMusicPlayer/react-player/src/components/Player.js"],"names":["React","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","faPause","Player","currentSong","isPlaying","setIsPlaying","audioRef","setSonginfo","songInfo","songs","setCurrentSong","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","song","id","length","duration"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause, } from \"@fortawesome/free-solid-svg-icons\";\r\n/* import { useState } from \"react/cjs/react.development\"; */\r\n\r\n\r\nconst Player = ({currentSong, isPlaying, setIsPlaying, audioRef, setSonginfo, songInfo, songs, setCurrentSong}) => {\r\n    //reference\r\n    \r\n    //eventhandlers\r\n    const playSongHandler = () =>{\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        }else{\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    }\r\n    \r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time /60)+\":\"+(\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n    const dragHandler= (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSonginfo({...songInfo, currentTime: e.target.value});\r\n    }\r\n    const skipTrackHandler = (direction) => {\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if(direction === \"skip-forward\") {\r\n            setCurrentSong(songs([currentIndex + 1] % songs.length));\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <input \r\n                min={0} \r\n                max={songInfo.duration || 0} \r\n                value={songInfo.currentTime}\r\n                onChange={dragHandler} \r\n                type=\"range\" />\r\n                <p>{getTime(songInfo.duration)}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={()=> skipTrackHandler(\"skip-back\")} className=\"skip-back\" size=\"2x\" icon={faAngleLeft}/>\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon onClick={()=> skipTrackHandler(\"skip-forward\")} className=\"skip-forward\" size=\"2x\" icon={faAngleRight}/>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;"]},"metadata":{},"sourceType":"module"}